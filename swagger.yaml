swagger: '2.0' 
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          type: string # ✅ Requis : Le jeton Bearer JWT dans l'en-tête "Authorization" sert à authentifier l'utilisateur.
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          type: string  # ✅ Requis : Le jeton Bearer JWT dans l'en-tête "Authorization" sert à authentifier l'utilisateur.
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error



# === Début de la section : Endpoints liés aux transactions ===

  /transactions: 
    get:  
      security:  
        - Bearer: []  
      tags:  
        - Transactions Module 
      summary: Get all transactions for current month 
      description: Retrieve all transactions for the authenticated user for the current month. 
      parameters:  
        - in: header  
          name: Authorization  
          type: string # ✅ Requis : Le jeton Bearer JWT dans l'en-tête "Authorization" sert à authentifier l'utilisateur.
          required: true 
          description: Bearer token  
      produces: 
        - application/json 
      responses: 
        '200': 
          description: List of transactions retrieved 
          schema: 
            type: array 
            items: 
              $ref: '#/definitions/Transaction'  
        '401': 
          description: Unauthorized  

  /transactions/{transactionId}:
    get:  
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction details
      description: Retrieve full details of a specific transaction by ID.
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID of the transaction
        - in: header
          name: Authorization
          type: string  # ✅ Requis : Le jeton Bearer JWT dans l'en-tête "Authorization" sert à authentifier l'utilisateur.
          required: true
          description: Bearer token
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found

    put:  
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update transaction details
      description: Modify additional details of a specific transaction.
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID of the transaction
        - in: header
          name: Authorization
          type: string # ✅ Requis : Le jeton Bearer JWT dans l'en-tête "Authorization" sert à authentifier l'utilisateur.
          required: true
          description: Bearer token
        - in: body
          name: body
          description: Updated transaction fields
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      responses:
        '200':
          description: Transaction updated
        '400':
          description: Invalid input
        '404':
          description: Transaction not found

    delete: 
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete transaction details
      description: Delete additional information from a transaction.
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID of the transaction
        - in: header
          name: Authorization
          type: string # ✅ Requis : Le jeton Bearer JWT dans l'en-tête "Authorization" sert à authentifier l'utilisateur.
          required: true
          description: Bearer token
      responses:
        '200':
          description: Transaction deleted
        '404':
          description: Transaction not found
   
   # === Fin de la section : Endpoints liés aux transactions ===
# Cette section complète les actions permettant de consulter, modifier et supprimer les transactions via l'API. 
# Ces points de terminaison facilitent la gestion des transactions pour l'utilisateur authentifié, tout en garantissant une sécurité adéquate.




definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name


  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
    
    
  ApiResponse: 
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string


  LoginResponse:
    type: object
    properties:
      token:
        type: string
    
    
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string




  # === Début de la section : New Definitions for Transactions === #
  Transaction: 
    type: object  
    properties: 
      id: 
        type: string 
      date:  
        type: string
        format: date 
      amount:  
        type: number  
        format: float  
      description:  
        type: string 
      category:  
        type: string 
      notes:  
        type: string 

  TransactionUpdate:  
    type: object  
    properties:  
      description:  
        type: string  
      category:  
        type: string  
      notes:  
        type: string 

   # === Fin de la section : New Definitions for Transactions ===
# Ces définitions permettent d'assurer que les données des transactions sont correctement structurées et validées. 
# Elles sont essentielles pour garantir la cohérence des données lors des interactions avec l'API.


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
